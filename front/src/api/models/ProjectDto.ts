/* tslint:disable */
/* eslint-disable */
/**
 * Api V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';

/**
 * 
 * @export
 * @interface ProjectDto
 */
export interface ProjectDto {
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectDto
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    ownerId: number;
    /**
     * 
     * @type {Array<UserDto>}
     * @memberof ProjectDto
     */
    members: Array<UserDto>;
}

/**
 * Check if a given object implements the ProjectDto interface.
 */
export function instanceOfProjectDto(value: object): value is ProjectDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    return true;
}

export function ProjectDtoFromJSON(json: any): ProjectDto {
    return ProjectDtoFromJSONTyped(json, false);
}

export function ProjectDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'ownerId': json['ownerId'],
        'members': ((json['members'] as Array<any>).map(UserDtoFromJSON)),
    };
}

export function ProjectDtoToJSON(json: any): ProjectDto {
    return ProjectDtoToJSONTyped(json, false);
}

export function ProjectDtoToJSONTyped(value?: ProjectDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'ownerId': value['ownerId'],
        'members': ((value['members'] as Array<any>).map(UserDtoToJSON)),
    };
}

