/* tslint:disable */
/* eslint-disable */
/**
 * Api V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSimpleDto } from './UserSimpleDto';
import {
    UserSimpleDtoFromJSON,
    UserSimpleDtoFromJSONTyped,
    UserSimpleDtoToJSON,
    UserSimpleDtoToJSONTyped,
} from './UserSimpleDto';

/**
 * 
 * @export
 * @interface FileDto
 */
export interface FileDto {
    /**
     * 
     * @type {number}
     * @memberof FileDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof FileDto
     */
    filename: string;
    /**
     * 
     * @type {string}
     * @memberof FileDto
     */
    filepath: string;
    /**
     * 
     * @type {string}
     * @memberof FileDto
     */
    fileType: string;
    /**
     * 
     * @type {number}
     * @memberof FileDto
     */
    fileSize: number;
    /**
     * 
     * @type {string}
     * @memberof FileDto
     */
    uploadDate: string;
    /**
     * 
     * @type {UserSimpleDto}
     * @memberof FileDto
     */
    uploader: UserSimpleDto;
}

/**
 * Check if a given object implements the FileDto interface.
 */
export function instanceOfFileDto(value: object): value is FileDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('filename' in value) || value['filename'] === undefined) return false;
    if (!('filepath' in value) || value['filepath'] === undefined) return false;
    if (!('fileType' in value) || value['fileType'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('uploadDate' in value) || value['uploadDate'] === undefined) return false;
    if (!('uploader' in value) || value['uploader'] === undefined) return false;
    return true;
}

export function FileDtoFromJSON(json: any): FileDto {
    return FileDtoFromJSONTyped(json, false);
}

export function FileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'filename': json['filename'],
        'filepath': json['filepath'],
        'fileType': json['fileType'],
        'fileSize': json['fileSize'],
        'uploadDate': json['uploadDate'],
        'uploader': UserSimpleDtoFromJSON(json['uploader']),
    };
}

export function FileDtoToJSON(json: any): FileDto {
    return FileDtoToJSONTyped(json, false);
}

export function FileDtoToJSONTyped(value?: FileDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'filename': value['filename'],
        'filepath': value['filepath'],
        'fileType': value['fileType'],
        'fileSize': value['fileSize'],
        'uploadDate': value['uploadDate'],
        'uploader': UserSimpleDtoToJSON(value['uploader']),
    };
}

